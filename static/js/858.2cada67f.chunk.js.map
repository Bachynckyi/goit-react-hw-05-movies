{"version":3,"file":"static/js/858.2cada67f.chunk.js","mappings":"8LACA,EAA6B,+BAA7B,EAA6E,mCAA7E,EAA4H,8B,SCG/GA,EAAa,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,MAC1BC,GAAWC,EAAAA,EAAAA,MACjB,OACI,2BACKF,IAAS,eAAIG,UAAWC,EAAf,SAAoCJ,KAC9C,eAAIG,UAAWC,EAAf,SACKL,EAAOM,KAAI,SAAAC,GAAK,OACb,eAAmBH,UAAWC,EAA9B,UACI,SAAC,KAAD,CAAMG,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMT,GADrB,SAECK,EAAMN,SAHFM,EAAME,GADF,QAWhC,C,yHCpBD,EAAwB,4BAAxB,EAA6D,6B,SC2D7D,EAtDqB,WAAO,IAAD,EACvB,GAAwCG,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOjB,EAAP,KAAekB,EAAf,KACA,GAAoCD,EAAAA,EAAAA,UAASF,GAA7C,eAAOI,EAAP,KAAmBC,EAAnB,KACA,GAAsCH,EAAAA,EAAAA,UAAS,MAA/C,eAAOI,EAAP,KAAoBC,EAApB,MAIAC,EAAAA,EAAAA,YAAU,WACQ,KAAVR,IAIJG,EAAU,MAEVM,EAAAA,GAAoBT,GACfU,MAAK,SAAAC,GAASR,EAAUQ,EAAKC,SAAUL,EAAeI,EAAKE,cAAe,IAC1EC,MAAMC,QAAQC,KACtB,GAAE,CAAChB,IAcJ,OACI,4BACI,kBAAMiB,SAVG,SAAAC,GACbA,EAAMC,iBACN,IACMC,EADOF,EAAMG,OACSrB,MAAMsB,MAAMC,cAAcC,OACtDzB,EAAgB,CAAEC,MAAOoB,IACzBjB,EAAU,GACb,EAIO,WACI,kBACIsB,SAhBC,SAAAC,GACbrB,EAAcqB,EAAEC,cAAcL,MAC/B,EAeaM,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,KAAK,QACLC,YAAY,eACZV,MAAOlB,EACPf,UAAWC,KAEf,mBAAQsC,KAAK,SAASvC,UAAWC,EAAjC,uBAEHL,IAAU,SAACD,EAAA,EAAD,CAAYC,OAAQA,IACd,IAAhBqB,IAAqB,gDAGjC,C,4MCxDK2B,EAAM,mCACNC,EAAW,gCAEJC,EAAiB,mCAAG,oGACNC,IAAAA,IAAA,UAAaF,EAAb,sCAAmDD,IAD7C,cACvBI,EADuB,yBAEtBA,EAAS1B,MAFa,2CAAH,qDAKjB2B,EAAY,mCAAG,WAAOC,GAAP,uFACDH,IAAAA,IAAA,UAAaF,EAAb,kBAA+BK,EAA/B,oBAAkDN,IADjD,cAClBI,EADkB,yBAEjBA,EAAS1B,MAFQ,2CAAH,sDAMZ6B,EAAe,mCAAG,WAAOxC,GAAP,uFACJoC,IAAAA,IAAA,UAAaF,EAAb,gCAA6CD,EAA7C,kBAA0DjC,IADtD,cACrBqC,EADqB,yBAEpBA,EAAS1B,MAFW,2CAAH,sDAKf8B,EAAY,mCAAG,WAAOF,GAAP,uFACDH,IAAAA,IAAA,UAAaF,EAAb,kBAA+BK,EAA/B,4BAA0DN,IADzD,cAClBI,EADkB,yBAEjBA,EAAS1B,KAAK+B,MAFG,2CAAH,sDAKZC,EAAe,mCAAG,WAAOC,GAAP,uFACJR,IAAAA,IAAA,UAAaF,EAAb,iBAA8BU,EAA9B,4BAA0DX,IADtD,cACrBI,EADqB,yBAEpBA,EAAS1B,KAAKC,SAFM,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.scss?709c","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/MovieSearch/MoviesSearch.module.scss?a44c","pages/MovieSearch/MoviesSearch.jsx","serviceAPI/serviceApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__uT7h1\",\"trendingTittle\":\"MoviesList_trendingTittle__aUUWM\",\"itemMovie\":\"MoviesList_itemMovie__dguw2\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.scss';\n\nexport const MoviesList = ({movies, title}) => {\n    const location = useLocation();\n    return (\n        <div>\n            {title && <h1 className={css.trendingTittle}>{title}</h1>}\n            <ul className={css.moviesList}>\n                {movies.map(movie => (\n                    <li key={movie.id} className={css.itemMovie}>\n                        <Link to={`/movies/${movie.id}`}\n                              state={{ from: location }}>\n                        {movie.title}       \n                        </Link>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n        }),\n    ),\n};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"MoviesSearch_input__KJwoX\",\"button\":\"MoviesSearch_button__DVPBU\"};","import { useState, useEffect } from 'react'\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from '../../serviceAPI/serviceApi';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport css from './MoviesSearch.module.scss'\n\nconst MoviesSearch = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? '';\n    const [movies, setMovies] = useState(null);\n    const [inputQuery, setInputQuery] = useState(query);\n    const [totalMovies, setTotalMovies] = useState(null);\n    \n    \n\n    useEffect(() => {\n        if (query === '') {\n            return;\n        };\n\n        setMovies(null);\n\n        API.getMoviesSearch(query)\n            .then(data => {setMovies(data.results); setTotalMovies(data.total_results)})\n            .catch(console.log)\n    }, [query]);\n\n    const onChange = e => {\n        setInputQuery(e.currentTarget.value);\n      };\n\n    const onSubmit = event => {\n        event.preventDefault();\n        const form = event.target;\n        const transformQuery = form.query.value.toLowerCase().trim();\n        setSearchParams({ query: transformQuery });\n        setMovies([]);\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <input\n                    onChange={onChange}\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    name='query'\n                    placeholder=\"Search movie\"\n                    value={inputQuery}\n                    className={css.input}\n                />\n                <button type=\"Search\" className={css.button}>Search</button>\n            </form>\n            {movies && <MoviesList movies={movies}/>}\n            {totalMovies === 0 && <div>Not found movies</div>}\n        </div>\n    );\n};\n\nexport default MoviesSearch;","import axios from 'axios';\n\nconst KEY = '46907e8d576e3c3202f853040ef73591';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY}`);\n    return response.data;\n};\n\nexport const getMovieById = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n    return response.data;\n};\n\n\nexport const getMoviesSearch = async (query) => {\n    const response = await axios.get(`${BASE_URL}search/movie?api_key=${KEY}&query=${query}`);\n    return response.data;\n};\n\nexport const getMovieCast = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`);\n    return response.data.cast;\n};\n\nexport const getMovieReviews = async (movie_id) => {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY}`);\n    return response.data.results;\n};"],"names":["MoviesList","movies","title","location","useLocation","className","css","map","movie","to","id","state","from","useSearchParams","searchParams","setSearchParams","query","get","useState","setMovies","inputQuery","setInputQuery","totalMovies","setTotalMovies","useEffect","API","then","data","results","total_results","catch","console","log","onSubmit","event","preventDefault","transformQuery","target","value","toLowerCase","trim","onChange","e","currentTarget","type","autoComplete","autoFocus","name","placeholder","KEY","BASE_URL","getTrendingMovies","axios","response","getMovieById","movieId","getMoviesSearch","getMovieCast","cast","getMovieReviews","movie_id"],"sourceRoot":""}