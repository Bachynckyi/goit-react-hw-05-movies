{"version":3,"file":"static/js/575.40446ede.chunk.js","mappings":"uOAEaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzB,OACI,SAAC,KAAD,CAAMC,GAAID,EAAV,oBAEP,ECHYE,EAAa,WAKtB,OACI,4BACI,oDACA,wBAPgB,CACpB,CAACC,KAAM,OAAQC,KAAM,QACrB,CAACD,KAAM,UAAWC,KAAM,YAMCC,KAAI,gBAAGF,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACjB,yBACI,SAAC,KAAD,CAAMH,GAAIE,EAAV,SAAiBC,KADZD,EADQ,QAQpC,E,UClBYG,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEpBC,EAKAD,EALAC,YACAC,EAIAF,EAJAE,MACAC,EAGAH,EAHAG,aACAC,EAEAJ,EAFAI,SACAC,EACAL,EADAK,OAGEC,EAAM,8CAA0CL,GACtD,OACI,4BACI,0BACI,gBACIM,IAAKD,EACLE,IAAKN,EACLO,MAAM,WAGd,0BAAKP,EAAL,KAAcC,EAAaO,MAAM,EAAG,GAApC,QACI,wCACJ,sCACI,uBAAIN,KACR,oCACI,uBAAIC,EAAOP,KAAI,qBAAGa,IAAH,IAAoBC,KAAK,UAGvD,ECUD,EA/BqB,WAAO,IAAD,IACfC,GAAWC,EAAAA,EAAAA,MAAXD,QACR,GAA2BE,EAAAA,EAAAA,YAA3B,eAAQf,EAAR,KAAegB,EAAf,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAW7C,GATAC,QAAQC,IAAIL,IAGZM,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAiBX,GACZY,KAAKT,GACLU,MAAML,QAAQC,IACtB,GAAE,CAACT,IAECb,EAIL,OACI,iCACI,SAACR,EAAD,CAAYC,OAAQwB,KACpB,SAAClB,EAAD,CAAWC,MAAOA,KAClB,SAACL,EAAD,KACA,SAAC,EAAAgC,SAAD,CAAUC,SAAU,KAApB,UACI,SAAC,KAAD,QAIf,C,4MCnCKC,EAAM,mCACNC,EAAW,gCAEJC,EAAiB,mCAAG,oGACNC,IAAAA,IAAA,UAAaF,EAAb,sCAAmDD,IAD7C,cACvBI,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKjBC,EAAY,mCAAG,WAAOtB,GAAP,uFACDmB,IAAAA,IAAA,UAAaF,EAAb,kBAA+BjB,EAA/B,oBAAkDgB,IADjD,cAClBI,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAMZE,EAAe,mCAAG,WAAOC,GAAP,uFACJL,IAAAA,IAAA,UAAaF,EAAb,gCAA6CD,EAA7C,kBAA0DQ,IADtD,cACrBJ,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfI,EAAY,mCAAG,WAAOzB,GAAP,uFACDmB,IAAAA,IAAA,UAAaF,EAAb,kBAA+BjB,EAA/B,4BAA0DgB,IADzD,cAClBI,EADkB,yBAEjBA,EAASC,KAAKK,MAFG,2CAAH,sDAKZC,EAAe,mCAAG,WAAOC,GAAP,uFACJT,IAAAA,IAAA,UAAaF,EAAb,iBAA8BW,EAA9B,4BAA0DZ,IADtD,cACrBI,EADqB,yBAEpBA,EAASC,KAAKQ,SAFM,2CAAH,qD","sources":["components/ButtonBack/ButtonBack.jsx","components/Additional/Additional.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","serviceAPI/serviceApi.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\n\nexport const ButtonBack = ({ goBack }) => {\n    return (\n        <Link to={goBack}>Go back</Link>\n    );\n};\n","import { Link } from \"react-router-dom\";\n\n\nexport const Additional = () => {\n    const additionalItems = [\n        {href: \"cast\", text: \"Cast\" },\n        {href: \"reviews\", text: \"Reviews\"},\n    ]\n    return (\n        <div>\n            <h4>Additional information</h4>\n            <ul>\n                {additionalItems.map(({ href, text }) => (\n                    <li key={href}>\n                        <Link to={href}>{text}</Link>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};","import PropTypes from 'prop-types';\n\nexport const MovieInfo = ({ movie }) => {\n    const {\n        poster_path,\n        title,\n        release_date,\n        overview,\n        genres,\n    } = movie;\n\n    const poster = `https://image.tmdb.org/t/p/original/${poster_path}`;\n    return (\n        <div>\n            <div>\n                <img \n                    src={poster}\n                    alt={title}\n                    width=\"300\"\n                />\n            </div>\n            <h2>{title} ({release_date.slice(0, 4)})</h2>\n                <p>User Score:</p>\n            <h3>Overview</h3>\n                <p>{overview}</p>\n            <h4>Genres</h4>\n                <p>{genres.map(({ name }) => name).join(', ')}</p>\n        </div>\n    );\n};\n\nMovieInfo.propTypes = {\n    movie: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        poster_path: PropTypes.string.isRequired,\n        release_date: PropTypes.string.isRequired,\n        overview: PropTypes.string.isRequired,\n        genres: PropTypes.arrayOf(\n            PropTypes.shape({ name: PropTypes.string.isRequired })),\n    }).isRequired,\n};","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { ButtonBack } from 'components/ButtonBack/ButtonBack';\nimport { Additional } from 'components/Additional/Additional';\nimport * as API from '../serviceAPI/serviceApi';\n\nimport  { MovieInfo} from '../components/MovieInfo/MovieInfo';\n\nconst MovieDetails = () => {\n    const { movieId }= useParams();\n    const [ movie, setMovie] = useState();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n\n    console.log(backLinkHref)\n\n\n    useEffect(() => {\n        API.getMovieById(movieId)\n            .then(setMovie)\n            .catch(console.log)\n    }, [movieId])\n\n    if (!movie) {\n        return;\n      }\n\n    return (\n        <>\n            <ButtonBack goBack={backLinkHref}/>\n            <MovieInfo movie={movie}/>\n            <Additional />\n            <Suspense fallback={null}>\n                <Outlet />\n            </Suspense>\n        </>\n    );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst KEY = '46907e8d576e3c3202f853040ef73591';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY}`);\n    return response.data;\n};\n\nexport const getMovieById = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n    return response.data;\n};\n\n\nexport const getMoviesSearch = async (query) => {\n    const response = await axios.get(`${BASE_URL}search/movie?api_key=${KEY}&query=${query}`);\n    return response.data;\n};\n\nexport const getMovieCast = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`);\n    return response.data.cast;\n};\n\nexport const getMovieReviews = async (movie_id) => {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY}`);\n    return response.data.results;\n};"],"names":["ButtonBack","goBack","to","Additional","href","text","map","MovieInfo","movie","poster_path","title","release_date","overview","genres","poster","src","alt","width","slice","name","join","movieId","useParams","useState","setMovie","backLinkHref","useLocation","state","from","console","log","useEffect","API","then","catch","Suspense","fallback","KEY","BASE_URL","getTrendingMovies","axios","response","data","getMovieById","getMoviesSearch","query","getMovieCast","cast","getMovieReviews","movie_id","results"],"sourceRoot":""}