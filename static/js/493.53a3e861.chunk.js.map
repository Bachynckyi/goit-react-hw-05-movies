{"version":3,"file":"static/js/493.53a3e861.chunk.js","mappings":"iMAqDA,UAjDa,WACT,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAQC,EAAR,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,IANAE,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAiBH,GACZI,MAAK,SAAAC,GAAI,OAAIN,EAAQM,EAAZ,IACTC,MAAMC,QAAQC,IACtB,GAAE,CAACR,IAEAF,EAIJ,OACI,yBACCA,EAAKW,OAAS,GACX,wBACGX,EACEY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACH,0BACGA,GACC,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKJ,EACLK,MAAM,SAGR,gBACEF,IAAI,oDACJC,IAAKJ,EACLK,MAAM,SAGV,4BACE,uBAAIL,KACJ,uCAAeC,UAhBVF,EADN,OAuBT,uCAIX,C,4MChDKO,EAAM,mCACNC,EAAW,gCAEJC,EAAiB,mCAAG,oGACNC,IAAAA,IAAA,UAAaF,EAAb,sCAAmDD,IAD7C,cACvBI,EADuB,yBAEtBA,EAASjB,MAFa,2CAAH,qDAKjBkB,EAAY,mCAAG,WAAOvB,GAAP,uFACDqB,IAAAA,IAAA,UAAaF,EAAb,kBAA+BnB,EAA/B,oBAAkDkB,IADjD,cAClBI,EADkB,yBAEjBA,EAASjB,MAFQ,2CAAH,sDAMZmB,EAAe,mCAAG,WAAOC,GAAP,uFACJJ,IAAAA,IAAA,UAAaF,EAAb,gCAA6CD,EAA7C,kBAA0DO,IADtD,cACrBH,EADqB,yBAEpBA,EAASjB,MAFW,2CAAH,sDAKfqB,EAAY,mCAAG,WAAO1B,GAAP,uFACDqB,IAAAA,IAAA,UAAaF,EAAb,kBAA+BnB,EAA/B,4BAA0DkB,IADzD,cAClBI,EADkB,yBAEjBA,EAASjB,KAAKP,MAFG,2CAAH,sDAKZ6B,EAAe,mCAAG,WAAOC,GAAP,uFACJP,IAAAA,IAAA,UAAaF,EAAb,iBAA8BS,EAA9B,4BAA0DV,IADtD,cACrBI,EADqB,yBAEpBA,EAASjB,KAAKwB,SAFM,2CAAH,qD","sources":["pages/Cast.jsx","serviceAPI/serviceApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../serviceAPI/serviceApi';\n\nconst Cast = () => {\n    const [ cast, setCast ] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        API.getMovieCast(movieId)\n            .then(data => setCast(data))\n            .catch(console.log)\n    }, [movieId]);\n    \n    if(!cast) {\n        return;\n    };\n\n    return (\n        <div>\n        {cast.length > 0 ? (\n            <ul>\n              {cast\n                .map(({ id, name, character, profile_path }) => (\n                  <li key={id}>\n                    {profile_path ? (\n                      <img\n                        src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                        alt={name}\n                        width=\"100\"\n                      />\n                    ) : (\n                      <img\n                        src=\"https://demofree.sirv.com/nope-not-here.jpg?w=100\"\n                        alt={name}\n                        width=\"100\"\n                      />\n                    )}\n                    <div>\n                      <p>{name}</p>\n                      <p>Character: {character}</p>\n                    </div>\n                  </li>\n                ))}\n            </ul>\n          ) : (\n            <div>No casts</div>\n          )}\n    </div>\n    );\n};\n\n\nexport default Cast;","import axios from 'axios';\n\nconst KEY = '46907e8d576e3c3202f853040ef73591';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY}`);\n    return response.data;\n};\n\nexport const getMovieById = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n    return response.data;\n};\n\n\nexport const getMoviesSearch = async (query) => {\n    const response = await axios.get(`${BASE_URL}search/movie?api_key=${KEY}&query=${query}`);\n    return response.data;\n};\n\nexport const getMovieCast = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`);\n    return response.data.cast;\n};\n\nexport const getMovieReviews = async (movie_id) => {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY}`);\n    return response.data.results;\n};"],"names":["useState","cast","setCast","movieId","useParams","useEffect","API","then","data","catch","console","log","length","map","id","name","character","profile_path","src","alt","width","KEY","BASE_URL","getTrendingMovies","axios","response","getMovieById","getMoviesSearch","query","getMovieCast","getMovieReviews","movie_id","results"],"sourceRoot":""}